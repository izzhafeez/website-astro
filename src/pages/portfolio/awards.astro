---
import Layout from '../../layouts/Layout.astro';
import NavBar from '../../components/common/NavBar.astro';
import Hero from '../../components/common/Hero.astro';
import awardsData from '../../data/portfolio/awards.json';
import { toName } from '../../utils/string';
import AwardPreview from '../../components/portfolio/AwardPreview.astro';
import Footer from '../../components/common/Footer.astro';
import portfolioData from '../../data/portfolio/portfolio.json';

interface AwardData {
  title?: string,
  related?: string[],
  rank?: number,
  level?: string,
  issuer?: string
}

type AwardJson = {[key: string]: AwardData };

const awards = Object.entries(awardsData as AwardJson).map(([key, value]) => {
  const [issuer, ...rest] = key.split('-');
  return {
    key,
    issuer: value.issuer ?? issuer,
    title: value.title ?? toName(rest.join('-')),
    level: value.level,
    rank: value.rank ?? 0,
    related: value.related
  }
}).sort((a,b) => -a.rank + b.rank);

const heroText = portfolioData.awards.heroText;
---
<Layout>
  <div slot="main" class="">
    <NavBar client:load/>
    <Hero label="AWARDS" text={heroText} site="portfolio"/>
    <section class="grid grid-cols-1 lg:grid-cols-2 gap-4 relative p-2 max-w-6xl mx-auto" transition:animate="slide">
      {awards.map(award => <AwardPreview client:visible award={award}/>)}
    </section>
    <Footer color="ew"/>
  </div>
</Layout>