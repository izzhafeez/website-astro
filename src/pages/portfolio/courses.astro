---
import Layout from '../../layouts/Layout.astro';
import NavBar from '../../components/common/NavBar.astro';
import Hero from '../../components/common/Hero.astro';
import courseData from '../../data/portfolio/courses.json';
import { capitalise, toName } from '../../utils/string';
import CoursePreview from '../../components/portfolio/CoursePreview.astro';
import Footer from '../../components/common/Footer.astro';
import portfolioData from '../../data/portfolio/portfolio.json';
import Seo from '../../components/seo/Seo.astro';
import seoImg from "../../img/heroes/COURSES.jpg";

interface CourseData {
  title?: string,
  issuer?: string,
  link?: string,
  name?: string,
  grade?: string,
  rank?: number,
  related?: string[]
}

type CourseJson = {[key: string]: CourseData };

const typeMap: {[key: string]: number} = {
  pc: 2,
  spec: 1,
  '': 0
};

const courses = Object.entries(courseData as CourseJson).map(([key, value]) => {
  let title = value.title;
  let issuer = value.issuer;
  let type = '';
  let imgPath = '';
  const splitKey = key.split('-');
  if (splitKey.length === 1) {
    title = title ?? key.toUpperCase();
    imgPath = '/img/portfolio/courses/nus.jpg'
  } else {
    let [issuerRaw, ...rest] = splitKey;
    type = rest.pop() ?? '';
    issuer = issuer ?? capitalise(issuerRaw);
    title = title ?? toName(rest.join('-'));
    imgPath = `/img/portfolio/courses/${issuerRaw}.jpg`
  }

  return {
    key,
    title,
    issuer,
    type,
    imgPath,
    grade: value.grade,
    name: value.name,
    link: value.link ?? `https://nusmods.com/courses/${title}`,
    rank: value.rank ?? 0,
    related: value.related
  }
}).sort((a,b) => a.title.localeCompare(b.title)).sort((a,b) => -typeMap[a.type] + typeMap[b.type] || a.rank - b.rank);

const heroText = portfolioData.courses.heroText;
---
<Seo {heroText} {seoImg} pageName={"Courses"} path="portfolio/courses"/>

<Layout>
  <div slot="main" class="min-h-screen h-auto flex flex-col">
    <NavBar/>
    <Hero label="COURSES" text={heroText} site="portfolio"/>
    <section class="my-auto grid grid-cols-1 lg:grid-cols-2 gap-2 relative p-2 max-w-6xl mx-auto">
      {courses.slice(0,14).map(course => <CoursePreview course={course} isEager={true}/>)}
      {courses.slice(14).map(course => <CoursePreview course={course}/>)}
    </section>
    <Footer site="portfolio"/>
  </div>
</Layout>