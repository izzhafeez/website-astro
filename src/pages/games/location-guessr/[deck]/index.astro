---
import type { GetStaticPaths } from "astro";
import NavBar from "../../../../components/common/NavBar.astro";
import Seo from "../../../../components/seo/Seo.astro";
import gamesData from "../../../../data/games/games.json";
import Layout from "../../../../layouts/Layout.astro";
import PageFind from "../../../../components/common/PageFind.astro";

import statAttackData from "../../../../data/games/stat-attack/stat-attack.json";
import RoomCreateContainer from "../../common/RoomCreateContainer.astro";

export const getStaticPaths = (() => {  
  return [
    {
      params: {
        deck: "malls",
      },
      props: {
        title: statAttackData.malls.title,
        instructions: statAttackData.malls.instructions
      }
    },
    {
      params: {
        deck: "cities"
      },
      props: {
        title: statAttackData.cities.title,
        instructions: statAttackData.cities.instructions
      }
    },
    {
      params: {
        deck: "mrt"
      },
      props: {
        title: statAttackData.mrt.title,
        instructions: statAttackData.mrt.instructions
      }
    },
    {
      params: {
        deck: "universities"
      },
      props: {
        title: statAttackData.universities.title,
        instructions: statAttackData.universities.instructions
      }
    },
    {
      params: {
        deck: "schools"
      },
      props: {
        title: statAttackData.schools.title,
        instructions: statAttackData.schools.instructions
      }
    },
    {
      params: {
        deck: "airports"
      },
      props: {
        title: statAttackData.airports.title,
        instructions: statAttackData.airports.instructions
      }
    },
    {
      params: {
        deck: "indo-attractions"
      },
      props: {
        title: statAttackData["indo-attractions"].title,
        instructions: statAttackData["indo-attractions"].instructions
      }
    },
    {
      params: {
        deck: "subzones"
      },
      props: {
        title: statAttackData.subzones.title,
        instructions: statAttackData.subzones.instructions
      }
    },
    {
      params: {
        deck: "buildings"
      },
      props: {
        title: statAttackData.buildings.title,
        instructions: statAttackData.buildings.instructions
      }
    },
    {
      params: {
        deck: "bus-stops"
      },
      props: {
        title: statAttackData["bus-stops"].title,
        instructions: statAttackData["bus-stops"].instructions
      }
    },
    {
      params: {
        deck: "famous-people"
      },
      props: {
        title: statAttackData["famous-people"].title,
        instructions: statAttackData["famous-people"].instructions
      }
    },
    {
      params: {
        deck: "places-in-singapore"
      },
      props: {
        title: statAttackData["places-in-singapore"].title,
        instructions: statAttackData["places-in-singapore"].instructions
      }
    },
    {
      params: {
        deck: "unesco"
      },
      props: {
        title: statAttackData.unesco.title,
        instructions: statAttackData.unesco.instructions
      }
    },
    {
      params: {
        deck: "hikes"
      },
      props: {
        title: statAttackData.hikes.title,
        instructions: statAttackData.hikes.instructions
      }
    }
  ];
}) satisfies GetStaticPaths;

const { deck } = Astro.params;
const { instructions, title } = Astro.props;
const heroText = gamesData["location-guessr"].heroText;
const images = import.meta.glob<{ default: ImageMetadata }>('/src/img/**/*.jpg');
const seoImg = await images[`/src/img/games/stat-attack/${deck}.jpg`]().then(img => img.default);
---

<Seo {heroText} pageName={"Location Guessr"} path={`games/location-guessr`}/>

<Layout>
  <div slot="main" class="min-h-screen h-auto flex flex-col">
    <NavBar/>
    <PageFind pageName={`${title} (Location Guessr)`} heroText={heroText}/>
    <RoomCreateContainer title={title} heroText={`Location Guessr: ${heroText}`} instructions={instructions} />
  </div>
</Layout>