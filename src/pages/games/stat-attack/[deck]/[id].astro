---
import NavBar from "../../../../components/common/NavBar.astro";
import StatAttack from "../../../../components/games/stat-attack/StatAttack";
import Layout from "../../../../layouts/Layout.astro";
import mallsData from "../../../../data/games/stat-attack/malls.json";
import citiesData from "../../../../data/games/stat-attack/cities.json";
import mrtData from "../../../../data/games/stat-attack/mrt.json";
import universitiesData from "../../../../data/games/stat-attack/universities.json";
import animeData from "../../../../data/games/stat-attack/anime.json";
import artistsData from "../../../../data/games/stat-attack/artists.json";
import songsYoutubeData from "../../../../data/games/stat-attack/songs-youtube.json";
import pokemonData from "../../../../data/games/stat-attack/pokemon.json";
import youtubersData from "../../../../data/games/stat-attack/youtubers.json";
import fastFoodData from "../../../../data/games/stat-attack/fast-food.json";
import schoolData from "../../../../data/games/stat-attack/schools.json";
import airportsData from "../../../../data/games/stat-attack/airports.json";
import moviesData from "../../../../data/games/stat-attack/movies.json";
import programmingLanguagesData from "../../../../data/games/stat-attack/programming-languages.json";
import countriesData from "../../../../data/games/stat-attack/countries.json";
import elementsData from "../../../../data/games/stat-attack/elements.json";
import leadersData from "../../../../data/games/stat-attack/leaders.json";
import videoGamesData from "../../../../data/games/stat-attack/video-games.json";
import covidData from "../../../../data/games/stat-attack/covid-19.json";
import laptopData from "../../../../data/games/stat-attack/laptops.json";
import roadsCoordsData from "../../../../data/games/stat-attack/roads-coords.json";
import roadsFeaturesData from "../../../../data/games/stat-attack/roads-features.json";
import indoAttractionsData from "../../../../data/games/stat-attack/indo-attractions.json";
import websitesData from "../../../../data/games/stat-attack/websites.json";
import subzonesData from "../../../../data/games/stat-attack/subzones.json";
import kanjiData from "../../../../data/games/stat-attack/kanji.json";
import csModsData from "../../../../data/games/stat-attack/cs-mods.json";
import githubData from "../../../../data/games/stat-attack/github.json";
import mineralsData from "../../../../data/games/stat-attack/minerals.json";
import nutritionData from "../../../../data/games/stat-attack/nutrition.json";
import buildingsData from "../../../../data/games/stat-attack/buildings.json";
import busStopsData from "../../../../data/games/stat-attack/bus-stops.json";
import busServicesData from "../../../../data/games/stat-attack/bus-services.json";
import famousPeopleData from "../../../../data/games/stat-attack/famous-people.json";
import Seo from "../../../../components/seo/Seo.astro";
import gamesData from "../../../../data/games/games.json";

export const prerender = false;
const { id } = Astro.params;
const splitPath = Astro.url.pathname.split("/");
const deckName: string = splitPath[splitPath.length - 2];

let deck;
switch (deckName) {
  case "malls":
    deck = {
      title: "Malls of Singapore",
      data: mallsData
    };
    break;
  case "cities":
    deck = {
      title: "Cities of the World",
      data: citiesData
    }
    break;
  case "mrt":
    deck = {
      title: "MRT Stations of Singapore",
      data: mrtData
    }
    break;
  case "countries":
    deck = {
      title: "Countries of the World",
      data: countriesData
    } // https://www.kaggle.com/datasets/nelgiriyewithana/countries-of-the-world-2023
    break;
  case "universities":
    deck = {
      title: "University Rankings",
      data: universitiesData
    };
    break;
  case "artists":
    deck = {
      title: "Music Artists",
      data: artistsData
    }
    break;
  case "anime":
    deck = {
      title: "Anime Ratings",
      data: animeData
    }
    break;
  case "songs-youtube":
    deck = {
      title: "Songs on YouTube",
      data: songsYoutubeData
    }
    break;
  case "pokemon":
    deck = {
      title: "Pokemon Stats",
      data: pokemonData
    };
    break;
  case "youtubers":
    deck = {
      title: "YouTubers",
      data: youtubersData
    }
    break;
  case "fast-food":
    deck = {
      title: "Fast Food Nutrition",
      data: fastFoodData
    }
    break;
  case "schools":
    deck = {
      title: "Schools of Singapore",
      data: schoolData
    }
    break;
  case "airports":
    deck = {
      title: "Airports of the World",
      data: airportsData
    }
    break;
  case "movies":
    deck = {
      title: "Movie Ratings",
      data: moviesData
    } // https://www.kaggle.com/datasets/prishasawhney/imdb-dataset-top-2000-movies
    break;
  case "programming":
    deck = {
      title: "Programming Languages",
      data: programmingLanguagesData
    } // https://www.kaggle.com/datasets/sujaykapadnis/programming-language-database
    break;
  case "elements":
    deck = {
      title: "Elements of the Periodic Table",
      data: elementsData // https://www.kaggle.com/datasets/jwaitze/tablesoftheelements?select=periodic_table_with_all_units.csv
    }
    break;
  case "leaders":
    deck = {
      title: "World Leaders",
      data: leadersData // https://www.kaggle.com/datasets/ramjasmaurya/world-leaders-and-their-election-wins?select=election_list+results.csv
    }
    break;
  case "video-games":
    deck = {
      title: "Video Games",
      data: videoGamesData // https://www.kaggle.com/datasets/muhammadadiltalay/imdb-video-games
    }
    break;
  case "covid":
    deck = {
      title: "Covid-19 Stats",
      data: covidData // https://www.kaggle.com/datasets/imdevskp/corona-virus-report
    }
    break;
  case "laptops":
    deck = {
      title: "Laptop Specs",
      data: laptopData // https://www.kaggle.com/datasets/muhammetvarl/laptop-price
    }
    break;
  case "roads-coords":
    deck = {
      title: "Roads of Singapore (Coordinates)",
      data: roadsCoordsData // https://www.kaggle.com/datasets/nelgiriyewithana/singapore-roads
    }
    break;
  case "roads-features":
    deck = {
      title: "Roads of Singapore (Features)",
      data: roadsFeaturesData // https://www.kaggle.com/datasets/nelgiriyewithana/singapore-roads
    }
    break;
  case "indo-attractions":
    deck = {
      title: "Indonesian Attractions",
      data: indoAttractionsData // https://www.kaggle.com/datasets/aprabowo/indonesia-tourism-destination?select=tourism_with_id.csv
    }
    break;
  case "websites":
    deck = {
      title: "Websites", // https://www.kaggle.com/datasets/ashkangoharfar/sites-information-data-from-alexacom-dataset
      data: websitesData // https://www.kaggle.com/datasets/bpali26/popular-websites-across-the-globe
    }
    break;
  case 'subzones':
    deck = {
      title: "Subzones of Singapore",
      data: subzonesData
    }
    break;
  case 'kanji':
    deck = {
      title: "Japanese Kanji",
      data: kanjiData
    }
    break;
  case 'cs-mods':
    deck = {
      title: "NUS School of Computing Mods",
      data: csModsData
    }
    break;
  case 'github':
    deck = {
      title: "GitHub Repositories",
      data: githubData
    }
    break;
  case 'minerals':
    deck = {
      title: "Minerals",
      data: mineralsData
    }
    break;
  case 'nutrition':
    deck = {
      title: "Nutrition",
      data: nutritionData
    }
    break;
  case 'buildings':
    deck = {
      title: "Buildings of the World",
      data: buildingsData
    }
    break;
  case 'bus-stops':
    deck = {
      title: "Bus Stops of Singapore",
      data: busStopsData
    }
    break;
  case 'bus-services':
    deck = {
      title: "Bus Services of Singapore",
      data: busServicesData
    }
    break;
  case 'famous-people':
    deck = {
      title: "Famous People",
      data: famousPeopleData
    }
    break;
  default:
    deck = {
      title: '',
      data: []
    };
}

const heroText = gamesData["stat-attack"].heroText;
const images = import.meta.glob<{ default: ImageMetadata }>('/src/img/**/*.jpg');
const seoImg = await images[`/src/img/games/stat-attack/${deckName}.jpg`]().then(img => img.default);
---

<Seo {heroText} {seoImg} pageName={deck.title} path={`games/stat-attack/${deckName}/${id}`}/>

<Layout>
  <div slot="main">
    <NavBar/>
    <StatAttack client:only="react" id={id || ""} deck={deck} deckName={deckName}/>
  </div>
</Layout>