---
import NavBar from "../../../../components/common/NavBar.astro";
import StatAttack from "../../../../components/games/stat-attack/StatAttack";
import Layout from "../../../../layouts/Layout.astro";
import mallsData from "../../../../data/games/stat-attack/malls.json";
import citiesData from "../../../../data/games/stat-attack/cities.json";
import mrtData from "../../../../data/games/stat-attack/mrt.json";
import countriesPopulationData from "../../../../data/games/stat-attack/countries-population.json";
import countriesLandData from "../../../../data/games/stat-attack/countries-land.json";
import universitiesData from "../../../../data/games/stat-attack/universities.json";
import songsData from "../../../../data/games/stat-attack/songs.json";
import animeData from "../../../../data/games/stat-attack/anime.json";
import songsYoutubeData from "../../../../data/games/stat-attack/songs-youtube.json";
import pokemonData from "../../../../data/games/stat-attack/pokemon.json";
import youtubersData from "../../../../data/games/stat-attack/youtubers.json";
import fastFoodData from "../../../../data/games/stat-attack/fast-food.json";
import schoolData from "../../../../data/games/stat-attack/schools.json";
import airportsData from "../../../../data/games/stat-attack/airports.json";
import moviesData from "../../../../data/games/stat-attack/movies.json";
import { SEO } from 'astro-seo';
import gamesData from "../../../../data/games/games.json";

export const prerender = false;
const deckData = {
  malls: {
    title: "Malls of Singapore",
    data: mallsData
  },
  cities: {
    title: "Cities of the World",
    data: citiesData
  },
  mrt: {
    title: "MRT Stations of Singapore",
    data: mrtData
  },
  countriesPopulation: {
    title: "Country Population",
    data: countriesPopulationData
  },
  countriesLand: {
    title: "Country Land Area",
    data: countriesLandData
  },
  universities: {
    title: "University Rankings",
    data: universitiesData
  },
  songs: {
    title: "Songs on Spotify",
    data: songsData
  },
  anime: {
    title: "Anime Ratings",
    data: animeData
  },
  songsYoutube: {
    title: "Songs on YouTube",
    data: songsYoutubeData
  },
  pokemon: {
    title: "Pok√©mon",
    data: pokemonData
  },
  youtubers: {
    title: "YouTubers",
    data: youtubersData
  },
  fastFood: {
    title: "Fast Food Nutrition",
    data: fastFoodData
  },
  schools: {
    title: "Schools in Singapore",
    data: schoolData
  },
  airports: {
    title: "Airports of the World",
    data: airportsData
  },
  movies: {
    title: "Movies",
    data: moviesData
  }
}

const { id } = Astro.params;
const splitPath = Astro.url.pathname.split("/");
const deckName: string = splitPath[splitPath.length - 2];

let deck;
switch (deckName) {
  case "malls":
    deck = deckData.malls;
    break;
  case "cities":
    deck = deckData.cities;
    break;
  case "mrt":
    deck = deckData.mrt;
    break;
  case "countries-population":
    deck = deckData.countriesPopulation; // https://www.kaggle.com/datasets/nelgiriyewithana/countries-of-the-world-2023
    break;
  case "countries-land":
    deck = deckData.countriesLand;
    break;
  case "universities":
    deck = deckData.universities;
    break;
  case "songs":
    deck = deckData.songs;
    break;
  case "anime":
    deck = deckData.anime;
    break;
  case "songs-youtube":
    deck = deckData.songsYoutube;
    break;
  case "pokemon":
    deck = deckData.pokemon;
    break;
  case "youtubers":
    deck = deckData.youtubers;
    break;
  case "fast-food":
    deck = deckData.fastFood;
    break;
  case "schools":
    deck = deckData.schools;
    break;
  case "airports":
    deck = deckData.airports;
    break;
  case "movies":
    deck = deckData.movies;
    break;
  default:
    deck = deckData.malls;
}

const heroText = gamesData["stat-attack"].heroText;
const images = import.meta.glob<{ default: ImageMetadata }>('/src/img/**/*.jpg');
const seoImg = await images[`/src/img/games/stat-attack/${deckName}.jpg`]().then(img => img.default.src);
---

<SEO
  title={`${deck.title} | Izz Hafeez`}
  description={heroText}
  canonical={`https://izzhafeez.com/games/stat-attack/${deckName}/${id}`}
  openGraph={{
    basic: {
      title: `${deck.title} | Izz Hafeez`,
      type: "website",
      image: seoImg,
      url: `https://izzhafeez.com/games/stat-attack/${deckName}/${id}`
    }
  }}
  extend={{
    // extending the default link tags
    link: [{ rel: "icon", href: "/favicon.png" }],
    // extending the default meta tags
    meta: [
      {
        name: "twitter:image",
        content: seoImg,
      },
      { name: "twitter:title", content: `${deckName} | Izz Hafeez`},
      { name: "twitter:description", content: heroText },
    ],
  }}
/>

<Layout>
  <div slot="main">
    <NavBar/>
    <StatAttack client:only="react" id={id} deck={deck} deckName={deckName}/>
  </div>
</Layout>