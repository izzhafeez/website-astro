---
import type { GetStaticPaths } from 'astro';
import Layout from '../../../../layouts/Layout.astro';
import NavBar from '../../../../components/common/NavBar.astro';
import statAttackData from '../../../../data/games/stat-attack/stat-attack.json';
import StatAttackRoomCreate from '../../../../components/games/stat-attack/StatAttackRoomCreate';
import { SEO } from 'astro-seo';
import gamesData from '../../../../data/games/games.json';

export const getStaticPaths = (() => {  
  return [
    {
      params: {
        deck: "malls",
      },
      props: {
        title: statAttackData.malls.title,
        instructions: statAttackData.malls.instructions
      }
    },
    {
      params: {
        deck: "cities"
      },
      props: {
        title: statAttackData.cities.title,
        instructions: statAttackData.cities.instructions
      }
    },
    {
      params: {
        deck: "mrt"
      },
      props: {
        title: statAttackData.mrt.title,
        instructions: statAttackData.mrt.instructions
      }
    },
    {
      params: {
        deck: "countries-population"
      },
      props: {
        title: statAttackData["countries-population"].title,
        instructions: statAttackData["countries-population"].instructions
      }
    },
    {
      params: {
        deck: "countries-land"
      },
      props: {
        title: statAttackData["countries-land"].title,
        instructions: statAttackData["countries-land"].instructions
      }
    },
    {
      params: {
        deck: "universities"
      },
      props: {
        title: statAttackData.universities.title,
        instructions: statAttackData.universities.instructions
      }
    },
    {
      params: {
        deck: "songs"
      },
      props: {
        title: statAttackData.songs.title,
        instructions: statAttackData.songs.instructions
      }
    },
    {
      params: {
        deck: "anime"
      },
      props: {
        title: statAttackData.anime.title,
        instructions: statAttackData.anime.instructions
      }
    },
    {
      params: {
        deck: "songs-youtube" // https://www.kaggle.com/datasets/salvatorerastelli/spotify-and-youtube
      },
      props: {
        title: statAttackData["songs-youtube"].title,
        instructions: statAttackData["songs-youtube"].instructions
      }
    },
    {
      params: {
        deck: "pokemon"
      },
      props: {
        title: statAttackData.pokemon.title, // https://www.kaggle.com/datasets/onurgitmez/pokemon-stats-gen-1-9
        instructions: statAttackData.pokemon.instructions
      }
    },
    {
      params: {
        deck: "youtubers"
      },
      props: {
        title: statAttackData.youtubers.title, // https://www.kaggle.com/datasets/shiivvvaam/top-youtuber-worldwide
        instructions: statAttackData.youtubers.instructions
      }
    },
    {
      params: {
        deck: "fast-food"
      },
      props: {
        title: statAttackData["fast-food"].title, // https://www.kaggle.com/datasets/shrutimehta/fast-food-chain-restaurants
        instructions: statAttackData["fast-food"].instructions
      }
    },
    {
      params: {
        deck: "schools"
      },
      props: {
        title: statAttackData.schools.title,
        instructions: statAttackData.schools.instructions
      }
    },
    {
      params: {
        deck: "airports"
      },
      props: {
        title: statAttackData.airports.title,
        instructions: statAttackData.airports.instructions
      }
    },
    {
      params: {
        deck: "movies"
      },
      props: {
        title: statAttackData.movies.title,
        instructions: statAttackData.movies.instructions
      }
    },
    {
      params: {
        deck: "programming",
      },
      props: {
        title: statAttackData.programming.title,
        instructions: statAttackData.programming.instructions
      }
    },
    {
      params: {
        deck: "elements"
      },
      props: {
        title: statAttackData.elements.title,
        instructions: statAttackData.elements.instructions
      }
    },
    {
      params: {
        deck: "leaders"
      },
      props: {
        title: statAttackData.leaders.title,
        instructions: statAttackData.leaders.instructions
      }
    },
    {
      params: {
        deck: "video-games"
      },
      props: {
        title: statAttackData["video-games"].title,
        instructions: statAttackData["video-games"].instructions
      }
    },
    {
      params: {
        deck: "covid"
      },
      props: {
        title: statAttackData.covid.title,
        instructions: statAttackData.covid.instructions
      }
    },
    {
      params: {
        deck: "laptops"
      },
      props: {
        title: statAttackData.laptops.title,
        instructions: statAttackData.laptops.instructions
      }
    },
    {
      params: {
        deck: "roads-features"
      },
      props: {
        title: statAttackData["roads-features"].title,
        instructions: statAttackData["roads-features"].instructions
      }
    },
    {
      params: {
        deck: "roads-coords"
      },
      props: {
        title: statAttackData["roads-coords"].title,
        instructions: statAttackData["roads-coords"].instructions
      }
    },
    {
      params: {
        deck: "indo-attractions"
      },
      props: {
        title: statAttackData["indo-attractions"].title,
        instructions: statAttackData["indo-attractions"].instructions
      }
    },
    {
      params: {
        deck: "websites"
      },
      props: {
        title: statAttackData.websites.title,
        instructions: statAttackData.websites.instructions
      }
    },
    {
      params: {
        deck: "subzones"
      },
      props: {
        title: statAttackData.subzones.title,
        instructions: statAttackData.subzones.instructions
      }
    },
    {
      params: {
        deck: "kanji"
      },
      props: {
        title: statAttackData.kanji.title,
        instructions: statAttackData.kanji.instructions
      }
    },
    {
      params: {
        deck: "cs-mods"
      },
      props: {
        title: statAttackData["cs-mods"].title,
        instructions: statAttackData["cs-mods"].instructions
      }
    },
    {
      params: {
        deck: "github"
      },
      props: {
        title: statAttackData.github.title,
        instructions: statAttackData.github.instructions
      }
    }
  ];
}) satisfies GetStaticPaths;

const { deck } = Astro.params;
const { instructions, title } = Astro.props;
const heroText = gamesData["stat-attack"].heroText;
const images = import.meta.glob<{ default: ImageMetadata }>('/src/img/**/*.jpg');
const seoImg = await images[`/src/img/games/stat-attack/${deck}.jpg`]().then(img => img.default.src);
---

<SEO
  title={`${title} | Izz Hafeez`}
  description={heroText}
  canonical={`https://izzhafeez.com/games/stat-attack/${deck}`}
  openGraph={{
    basic: {
      title: `${title} | Izz Hafeez`,
      type: "website",
      image: seoImg,
      url: `https://izzhafeez.com/games/stat-attack/${deck}`
    }
  }}
  extend={{
    // extending the default link tags
    link: [{ rel: "icon", href: "/favicon.png" }],
    // extending the default meta tags
    meta: [
      {
        name: "twitter:image",
        content: seoImg,
      },
      { name: "twitter:title", content: `${deck} | Izz Hafeez`},
      { name: "twitter:description", content: heroText },
    ],
  }}
/>

<Layout>
  <div slot="main" class="min-h-screen h-auto flex flex-col">
    <NavBar/>
    <StatAttackRoomCreate client:only="react" title={title} instructions={instructions}/>
  </div>
</Layout>