---
import ItemPreviews from 'components/ItemPreviews';
import { allItems } from 'items/getItems';
import Layout from 'layouts/Layout.astro';
import LLMap from 'components/map/LLMap.svelte';
import allData from '@data/data';

export async function getStaticPaths() {
  return allItems.map(item => ({
    params: {
      category: item.category,
      type: item.type,
    },
    props: {
      category: item.category,
      type: item.type
    }
  }));
}

export const prerender = true;
const { category, type } = Astro.params;
const items = allItems.filter(item => item.category === category && item.type === type);
const imgPath = `/img/types/${type}.svg`;

const locations = items
  .filter(item => item.hasMap())
  .map(item => item.getLocations())
  .filter(locs => !!locs.length)
  .flat();

const lines = items
  .filter(item => item.hasMap())
  .map(item => item.getLines())
  .filter(lins => !!lins.length)
  .flat();

const overview = allData[category].data[type].description;
---

<Layout>
  <div slot="main" class="grid gap-2">
    {(!locations.length && !lines.length) && <img class={`mx-auto size-[15rem] bg-white rounded-full border-[5px] my-4 p-4 border-${Astro.params.category}-500 dark:border-${Astro.params.category}-300`} src={imgPath}/>}
    {(!!locations.length || !!lines.length) && <LLMap client:only="svelte" locations={locations} lines={lines}/>}
    {items[0] && <ItemPreviews category={Astro.params.category} size={items[0].getSize()} items={items} overview={overview}/>}
  </div>
<Layout/>