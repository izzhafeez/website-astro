---
import MapQuiz from "../../../components/quizzes/map/MapQuiz.svelte";
import { fullSanitise } from "../../../utils/string";
import Location from "../../../components/quizzes/map/Location";
import mrtData from "../../../data/quizzes/map/mrt.json";
import mrtChineseData from "../../../data/quizzes/map/mrt-chinese.json";
import mallsData from "../../../data/quizzes/map/malls.json";
import schoolsData from "../../../data/quizzes/map/schools.json";
import busStopData from "../../../data/quizzes/map/bus-stops.json";
import londonUndergroundData from "../../../data/quizzes/map/london-underground.json";
import tokyoMetroData from "../../../data/quizzes/map/tokyo-metro.json";
import monumentsData from "../../../data/quizzes/map/monuments.json";
import librariesData from "../../../data/quizzes/map/libraries.json";
import parksData from "../../../data/quizzes/map/parks.json";
import parkConnectorsData from "../../../data/quizzes/map/park-connectors.json";
import hotelsData from "../../../data/quizzes/map/hotels.json";
import ccData from "../../../data/quizzes/map/cc.json";
import citiesData from "../../../data/quizzes/map/cities.json";
import citiesAsiaData from "../../../data/quizzes/map/cities-asia.json";
import citiesEuropeData from "../../../data/quizzes/map/cities-europe.json";
import citiesAfricaData from "../../../data/quizzes/map/cities-africa.json";
import citiesNorthAmericaData from "../../../data/quizzes/map/cities-north-america.json";
import citiesSouthAmericaData from "../../../data/quizzes/map/cities-south-america.json";
import citiesOceaniaData from "../../../data/quizzes/map/cities-oceania.json";
import citiesUsData from "../../../data/quizzes/map/cities-us.json";
import touristAttractionsData from "../../../data/quizzes/map/tourist-attractions.json";
import { getLocationColor } from "../../../components/quizzes/map/colors";
import NavBar from "../../../components/common/NavBar.astro";
import PageFind from "../../../components/common/PageFind.astro";
import Seo from "../../../components/seo/Seo.astro";
import Layout from "../../../layouts/Layout.astro";
import Footer from "../../../components/common/Footer.astro";

export async function getStaticPaths() {
  return [
    {
      params: { quiz: 'mrt' },
      props: {
        title: 'MRT Stations of Singapore',
        data: mrtData,
        instructions: "How many MRT/LRT stations can you name? As you answer, the marker will disappear. Use regex to select the stations you want included in the quiz (tip: try typing 'EW' or 'oo' and see what they do). You get 5 seconds for every possible answer. Good luck!",
        defaultRegex: ''
      }
    },
    {
      params: { quiz: 'mrt-chinese' },
      props: {
        title: 'MRT Stations of Singapore (Chinese)',
        data: mrtChineseData,
        instructions: "How many MRT/LRT stations can you name in Chinese? As you answer, the marker will disappear. Use regex to select the stations you want included in the quiz (tip: try typing 'ä¸œ' or 'oo' and see what they do). You get 5 seconds for every possible answer. Good luck!",
        defaultRegex: ''
      }
    },
    {
      params: { quiz: 'malls' },
      props: {
        title: 'Malls of Singapore',
        data: mallsData,
        instructions: "How many malls in Singapore can you name? As you answer, the marker will disappear. Use regex to select the malls you want included in the quiz (tip: try using '300S', '200S', '100S' and '50S' to filter based on the number of stores). You get 5 seconds for every possible answer. Good luck!",
        defaultRegex: ''
      }
    },
    {
      params: { quiz: 'schools' },
      props: {
        title: "Schools of Singapore",
        data: schoolsData,
        instructions: "How many schools in Singapore can you name? As you answer, the marker will disappear. Use regex to select the schools you want included in the quiz (tip: try typing 'Secondary' or 'ang' and see what they do). You get 5 seconds for every possible answer. Good luck!",
        defaultRegex: ''
      }
    },
    {
      params: { quiz: 'bus-stops' },
      props: {
        title: "Bus Stops of Singapore",
        data: busStopData,
        instructions: "How many bus stops in Singapore can you name? As you answer, the marker will disappear. Use regex to select the bus stops you want included in the quiz (tip: try typing 'BUS126' or 'oo' and see what they do). You get 5 seconds for every possible answer. Good luck!",
        defaultRegex: ''
      }
    },
    {
      params: { quiz: 'london-underground' },
      props: {
        title: "London Underground Stations",
        data: londonUndergroundData,
        instructions: "How many London Underground stations can you name? As you answer, the marker will disappear. Use regex to select the stations you want included in the quiz (tip: try typing 'Bakerloo' or 'oo' and see what they do). You get 5 seconds for every possible answer. Good luck!",
        defaultRegex: ''
      }
    },
    {
      params: { quiz: 'tokyo-metro' },
      props: {
        title: "Tokyo Metro Stations",
        data: tokyoMetroData,
        instructions: "How many Tokyo Metro stations can you name? As you answer, the marker will disappear. Use regex to select the stations you want included in the quiz (tip: try typing 'Ginza' or 'oo' and see what they do). You get 5 seconds for every possible answer. Good luck!",
        defaultRegex: ''
      }
    },
    {
      params: { quiz: 'monuments' },
      props: {
        title: 'Monuments of Singapore',
        data: monumentsData,
        instructions: "How many famous monuments can you name? As you answer, the marker will disappear. Use regex to select the monuments you want included in the quiz (try typing 'Museum' or 'oo' to see what happens). You get 5 seconds for every possible answer. Good luck!",
        defaultRegex: ''
      }
    },
    {
      params: { quiz: 'libraries' },
      props: {
        title: 'Libraries of Singapore',
        data: librariesData,
        instructions: "How many libraries in Singapore can you name? As you answer, the marker will disappear. Use regex to select the libraries you want included in the quiz (try typing 'Public' or 'oo' to see what happens). You get 5 seconds for every possible answer. Good luck!",
        defaultRegex: ''
      }
    },
    {
      params: { quiz: 'parks' },
      props: {
        title: 'Parks of Singapore',
        data: parksData,
        instructions: "How many parks in Singapore can you name? As you answer, the marker will disappear. Use regex to select the parks you want included in the quiz (try typing 'Park' or 'oo' to see what happens). You get 5 seconds for every possible answer. Good luck!",
        defaultRegex: ''
      }
    },
    {
      params: { quiz: 'park-connectors' },
      props: {
        title: 'Park Connectors of Singapore',
        data: parkConnectorsData,
        instructions: "How many park connectors in Singapore can you name? As you answer, the marker will disappear. Use regex to select the park connectors you want included in the quiz (try typing 'Park' or 'oo' to see what happens). You get 5 seconds for every possible answer. Good luck!",
        defaultRegex: ''
      }
    },
    {
      params: { quiz: 'hotels' },
      props: {
        title: 'Hotels of Singapore',
        data: hotelsData,
        instructions: "How many hotels in Singapore can you name? As you answer, the marker will disappear. Use regex to select the hotels you want included in the quiz (try typing 'Hotel' or 'oo' to see what happens). You get 5 seconds for every possible answer. Good luck!",
        defaultRegex: ''
      }
    },
    {
      params: { quiz: 'cc' },
      props: {
        title: 'Community Centres of Singapore',
        data: ccData,
        instructions: "How many community centres in Singapore can you name? As you answer, the marker will disappear. Use regex to select the community centres you want included in the quiz (try typing 'CC' or 'oo' to see what happens). You get 5 seconds for every possible answer. Good luck!",
      }
    },
    {
      params: { quiz: 'tourist-attractions' },
      props: {
        title: 'Tourist Attractions of Singapore',
        data: touristAttractionsData,
        instructions: "How many tourist attractions in Singapore can you name? As you answer, the marker will disappear. Use regex to select the tourist attractions you want included in the quiz (try typing 'Park' or 'oo' to see what happens). You get 5 seconds for every possible answer. Good luck!",
        defaultRegex: ''
      }
    },
    {
      params: { quiz: 'cities' },
      props: {
        title: 'Cities of the World',
        data: citiesData,
        instructions: "How many cities in the world can you name? As you answer, the marker will disappear. Use regex to select the cities you want included in the quiz (try typing 'KOREA' or 'ton.*(100K|200K)' to see what happens). You get 5 seconds for every possible answer. Good luck!",
        defaultRegex: '10M|5M|2M|1M'
      }
    },
    {
      params: { quiz: 'cities-asia' },
      props: {
        title: 'Cities of Asia',
        data: citiesAsiaData,
        instructions: "How many cities in Asia can you name? As you answer, the marker will disappear. Use regex to select the cities you want included in the quiz (try typing 'JAPAN' or 'shan.*(100K|200K)' to see what happens). You get 5 seconds for every possible answer. Good luck!",
        defaultRegex: '10M|5M|2M|1M'
      }
    },
    {
      params: { quiz: 'cities-europe' },
      props: {
        title: 'Cities of Europe',
        data: citiesEuropeData,
        instructions: "How many cities in Europe can you name? As you answer, the marker will disappear. Use regex to select the cities you want included in the quiz (try typing 'GERMANY' or 'burg.*(100K|200K)' to see what happens). You get 5 seconds for every possible answer. Good luck!",
        defaultRegex: '10M|5M|2M|1M'
      }
    },
    {
      params: { quiz: 'cities-africa' },
      props: {
        title: 'Cities of Africa',
        data: citiesAfricaData,
        instructions: "How many cities in Africa can you name? As you answer, the marker will disappear. Use regex to select the cities you want included in the quiz (try typing 'SUDAN' or 'du.*(100K|200K)' to see what happens). You get 5 seconds for every possible answer. Good luck!",
        defaultRegex: '10M|5M|2M|1M'
      }
    },
    {
      params: { quiz: 'cities-north-america' },
      props: {
        title: 'Cities of North America',
        data: citiesNorthAmericaData,
        instructions: "How many cities in North America can you name? As you answer, the marker will disappear. Use regex to select the cities you want included in the quiz (try typing 'MEXICO' or 'ton.*(100K|200K)' to see what happens). You get 5 seconds for every possible answer. Good luck!",
        defaultRegex: '10M|5M|2M|1M'
      }
    },
    {
      params: { quiz: 'cities-south-america' },
      props: {
        title: 'Cities of South America',
        data: citiesSouthAmericaData,
        instructions: "How many cities in South America can you name? As you answer, the marker will disappear. Use regex to select the cities you want included in the quiz (try typing 'PERU' or 'San.*(100K|200K)' to see what happens). You get 5 seconds for every possible answer. Good luck!",
        defaultRegex: '10M|5M|2M|1M'
      }
    },
    {
      params: { quiz: 'cities-oceania' },
      props: {
        title: 'Cities of Oceania',
        data: citiesOceaniaData,
        instructions: "How many cities in Oceania can you name? As you answer, the marker will disappear. Use regex to select the cities you want included in the quiz (try typing 'FIJI' or '^T.*(100K|200K)' to see what happens). You get 5 seconds for every possible answer. Good luck!",
        defaultRegex: '10M|5M|2M|1M'
      }
    },
    {
      params: { quiz: 'cities-us' },
      props: {
        title: 'Cities of the United States',
        data: citiesUsData,
        instructions: "How many cities in the United States can you name? As you answer, the marker will disappear. Use regex to select the cities you want included in the quiz (try typing 'N[A-Z]', 'AL', 'MN.*(100|200K)' or 'ton.*(100K|200K)' to see what happens). You get 5 seconds for every possible answer. Good luck!",
        defaultRegex: '5M|2M|1M|500K'
      }
    }
  ]
}

export const prerender = true;
const { data } = Astro.props;
type LocationDictItem = {
  searchTerms: string,
  cleanText: string,
  id: number,
  toInclude: boolean
}
const locationDict: {[key: string]: LocationDictItem[]} = {};
const locationList: Location[] = [];

for (const [k, v] of Object.entries(data)) {
  const { searchTerms, key, cleanText } = fullSanitise(k);
  const [lng, lat] = v as number[];
  const location = new Location({
    lat, lng, label: cleanText, color: getLocationColor(k, Astro.params.quiz), searchTerms
  });
  locationList.push(location);
  if (!(key in locationDict)) locationDict[key] = [];
  const locationDictItem = {
    searchTerms: searchTerms,
    cleanText,
    id: locationList.length-1,
    toInclude: true
  }
  locationDict[key].push(locationDictItem);
}
const images = import.meta.glob<{ default: ImageMetadata }>('/src/img/**/*.jpg');
const seoImg = await images[`/src/img/quizzes/map/${Astro.params.quiz}.jpg`]().then(img => img.default);
const initialRegexInput = Astro.url.searchParams.get('regex') || Astro.props.defaultRegex || '';
---
<Seo heroText={Astro.props.instructions} pageName={`${Astro.props.title} (Map Quiz)`} path={`quizzes/map/${Astro.params.quiz}`}/>

<link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
  integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY="
  crossorigin=""/>
<script is:inline src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
  integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo="
  crossorigin=""></script>
<Layout>
  <div slot="main" class="">
    <NavBar/>
    <PageFind pageName={`${Astro.props.title} (Map Quiz)`} heroText={Astro.props.instructions}/>
    <div class="max-w-3xl mx-auto p-2">
      <h1 transition:name={Astro.params.quiz} class="text-5xl font-black animate-text bg-gradient-to-r from-ns-500 via-ns-400 to-ns-300 bg-clip-text text-transparent my-6">{Astro.props.title.toUpperCase()}</h1>
      <p transition:name={Astro.props.instructions} class="text-black dark:text-white max-w-3xl">{Astro.props.instructions}</p>
    </div>
    <MapQuiz client:only="svelte" key={Astro.params.quiz} locationDict={locationDict} locationList={locationList} defaultRegex={initialRegexInput}/>
    <Footer site="quizzes"/>
  </div>
</Layout>
<link href="https://cdn.jsdelivr.net/npm/@sweetalert2/theme-wordpress-admin/wordpress-admin.css" rel="stylesheet">
<script is:inline src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.js"></script>