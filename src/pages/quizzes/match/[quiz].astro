---
import type { GetStaticPaths } from "astro";
import Layout from "../../../layouts/Layout.astro";
import NavBar from "../../../components/common/NavBar.astro";
import seaData from "../../../data/quizzes/match/south-east-asia.json";
import balkanData from "../../../data/quizzes/connect/balkan.json";
import centralAsianData from "../../../data/quizzes/connect/central-asia.json";
import southAmericanData from "../../../data/quizzes/connect/south-america.json";
import middleEastData from "../../../data/quizzes/connect/middle-east.json";
import centralAmericaData from "../../../data/quizzes/connect/central-america.json";
import germanicData from "../../../data/quizzes/connect/germanic.json";
import sovietUnionData from "../../../data/quizzes/connect/soviet-union.json";
import westAfricanData from "../../../data/quizzes/connect/west-africa.json";
import romanceEuropeData from "../../../data/quizzes/connect/romance-europe.json";
import connectData from "../../../data/quizzes/connect.json";
import { AstroSeo } from "@astrolib/seo";
import MatchQuiz from "../../../components/quizzes/match/MatchQuiz.svelte";

export const getStaticPaths = (() => {
  return [
  {
      params: {
        quiz: "balkan"
      },
      props: {
        title: "Balkan Cities",
        data: balkanData,
        instructions: connectData.balkan.instructions
      }
    },
    {
      params: {
        quiz: "south-east-asia"
      },
      props: {
        title: "South East Asian Cities",
        data: seaData,
        instructions: connectData["south-east-asia"].instructions
      }
    },
    {
      params: {
        quiz: "central-asia"
      },
      props: {
        title: "Central Asian Cities",
        data: centralAsianData,
        instructions: connectData["central-asia"].instructions
      }
    },
    {
      params: {
        quiz: "south-america"
      },
      props: {
        title: "South American Cities",
        data: southAmericanData,
        instructions: connectData["south-america"].instructions
      }
    },
    {
      params: {
        quiz: "germanic", 
      },
      props: {
        title: "Germanic Cities",
        data: germanicData,
        instructions: connectData.germanic.instructions
      }
    },
    {
      params: {
        quiz: "middle-east"
      },
      props: {
        title: "Middle Eastern Cities",
        data: middleEastData,
        instructions: connectData["middle-east"].instructions
      }
    },
    {
      params: {
        quiz: 'central-america'
      },
      props: {
        title: "Central American Cities",
        data: centralAmericaData,
        instructions: connectData["central-america"].instructions
      }
    },
    {
      params: {
        quiz: 'soviet-union'
      },
      props: {
        title: "Soviet Union Cities",
        data: sovietUnionData,
        instructions: connectData["soviet-union"].instructions
      }
    },
    {
      params: {
        quiz: 'west-africa'
      },
      props: {
        title: "West African Cities",
        data: westAfricanData,
        instructions: connectData["west-africa"].instructions
      }
    },
    {
      params: {
        quiz: 'romance-europe'
      },
      props: {
        title: "Romance Europe Cities",
        data: romanceEuropeData,
        instructions: connectData["romance-europe"].instructions
      }
    },
  ];
}) satisfies GetStaticPaths;

const instructions = Astro.props.instructions + " Match the pairs of items together as quickly as possible.";
---
<AstroSeo
  title={Astro.props.title + " | Izz Hafeez"}
  description={Astro.props.instructions}
  canonical={`https://izzhafeez.com/quizzes/match/${Astro.params.quiz}`}
  openGraph={{
    title: Astro.props.title + " | Izz Hafeez",
    description: Astro.props.instructions,
    url: `https://izzhafeez.com/quizzes/match/${Astro.params.quiz}`,
    type: "website",
    images: [
      {
        url: `/src/img/quizzes/match/${Astro.params.quiz}.jpg`,
        width: 800,
        height: 600,
        alt: Astro.props.title + " | Izz Hafeez"
      }
    ]
  }}
/>

<Layout>
  <div slot="main">
    <NavBar/>
    <MatchQuiz client:load title={Astro.props.title} data={Astro.props.data} instructions={instructions}/>
    <link href="https://cdn.jsdelivr.net/npm/@sweetalert2/theme-minimal@4/minimal.css" rel="stylesheet">
    <script is:inline src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.js"></script>
  </div>
</Layout>