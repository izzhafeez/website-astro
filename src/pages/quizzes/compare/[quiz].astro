---
import subzonePopulationData from "../../../data/quizzes/compare/subzone-population.json";
import mrtLongitudeData from "../../../data/quizzes/compare/mrt-longitude.json";
import mrtLatitudeData from "../../../data/quizzes/compare/mrt-latitude.json";
import mallsLongitudeData from "../../../data/quizzes/compare/malls-longitude.json";
import mallsLatitudeData from "../../../data/quizzes/compare/malls-latitude.json";
import mallsAreaData from "../../../data/quizzes/compare/malls-area.json";
import mallsYearData from "../../../data/quizzes/compare/malls-year.json";
import mallsStoresData from "../../../data/quizzes/compare/malls-stores.json";
import foodWasteCapita from "../../../data/quizzes/compare/food-waste-capita.json";
import foodWasteNominal from "../../../data/quizzes/compare/food-waste-nominal.json";
import foodExpiryData from "../../../data/quizzes/compare/expiry.json";
import citiesLatitude from "../../../data/quizzes/compare/cities-latitude.json";
import citiesLongitude from "../../../data/quizzes/compare/cities-longitude.json";
import indonesiaCitiesLatitude from "../../../data/quizzes/compare/indonesia-latitude.json";
import indonesiaCitiesLongitude from "../../../data/quizzes/compare/indonesia-longitude.json";
import malaysiaCitiesLatitude from "../../../data/quizzes/compare/malaysia-latitude.json";
import malaysiaCitiesLongitude from "../../../data/quizzes/compare/malaysia-longitude.json";
import CompareQuiz from "../../../components/quizzes/compare/CompareQuiz.svelte";
import Layout from "../../../layouts/Layout.astro";
import NavBar from "../../../components/common/NavBar.astro";
import compareQuizData from "../../../data/quizzes/compare.json";
import { SEO } from 'astro-seo';

export function getStaticPaths() {
  return [
    {
      params: {
        quiz: "subzone-population"
      },
      props: {
        title: "Subzone Population",
        data: subzonePopulationData,
        instructions: compareQuizData["subzone-population"].instructions
      }
    },
    {
      params: {
        quiz: "mrt-longitude"
      },
      props: {
        title: "MRT Longitude",
        data: mrtLongitudeData,
        instructions: compareQuizData["mrt-longitude"].instructions,
        decimalPlaces: 4,
        startNumber: 103.6,
      }
    },
    {
      params: {
        quiz: "mrt-latitude"
      },
      props: {
        title: "MRT Latitude",
        data: mrtLatitudeData,
        instructions: compareQuizData["mrt-latitude"].instructions,
        decimalPlaces: 4,
        startNumber: 1.2,
      }
    },
    {
      params: {
        quiz: "malls-longitude"
      },
      props: {
        title: "Malls Longitude",
        data: mallsLongitudeData,
        instructions: compareQuizData["malls-longitude"].instructions,
        decimalPlaces: 4,
        startNumber: 103.6,
      }
    },
    {
      params: {
        quiz: "malls-latitude"
      },
      props: {
        title: "Malls Latitude",
        data: mallsLatitudeData,
        instructions: compareQuizData["malls-latitude"].instructions,
        decimalPlaces: 4,
        startNumber: 1.2,
      }
    },
    {
      params: {
        quiz: "malls-area"
      },
      props: {
        title: "Malls Area",
        data: mallsAreaData,
        instructions: compareQuizData["malls-area"].instructions
      }
    },
    {
      params: {
        quiz: "malls-year"
      },
      props: {
        title: "Malls Year",
        data: mallsYearData,
        instructions: compareQuizData["malls-year"].instructions
      }
    },
    {
      params: {
        quiz: "malls-stores"
      },
      props: {
        title: "Malls Stores",
        data: mallsStoresData,
        instructions: compareQuizData["malls-stores"].instructions
      }
    },
    {
      params: {
        quiz: "food-waste-capita"
      },
      props: {
        title: "Food Waste Per Capita",
        data: foodWasteCapita,
        instructions: compareQuizData["food-waste-capita"].instructions
      }
    },
    {
      params: {
        quiz: "food-waste-nominal"
      },
      props: {
        title: "Food Waste Nominal",
        data: foodWasteNominal,
        instructions: compareQuizData["food-waste-nominal"].instructions
      }
    },
    {
      params: {
        quiz: "expiry",
      },
      props: {
        title: "Food Expiry Dates",
        data: foodExpiryData,
        instructions: compareQuizData["expiry"].instructions
      }
    },
    {
      params: {
        quiz: "cities-latitude"
      },
      props: {
        title: "Cities Latitude",
        data: citiesLatitude,
        instructions: compareQuizData["cities-latitude"].instructions,
        decimalPlaces: 4,
      }
    },
    {
      params: {
        quiz: "cities-longitude"
      },
      props: {
        title: "Cities Longitude",
        data: citiesLongitude,
        instructions: compareQuizData["cities-longitude"].instructions,
        decimalPlaces: 4,
      }
    },
    {
      params: {
        quiz: "indonesia-latitude"
      },
      props: {
        title: "Indonesia Cities Latitude",
        data: indonesiaCitiesLatitude,
        instructions: compareQuizData["indonesia-latitude"].instructions,
        decimalPlaces: 4,
      }
    },
    {
      params: {
        quiz: "indonesia-longitude"
      },
      props: {
        title: "Indonesia Cities Longitude",
        data: indonesiaCitiesLongitude,
        instructions: compareQuizData["indonesia-longitude"].instructions,
        decimalPlaces: 4,
      }
    },
    {
      params: {
        quiz: "malaysia-latitude"
      },
      props: {
        title: "Malaysia Cities Latitude",
        data: malaysiaCitiesLatitude,
        instructions: compareQuizData["malaysia-latitude"].instructions,
        decimalPlaces: 4,
      }
    },
    {
      params: {
        quiz: "malaysia-longitude"
      },
      props: {
        title: "Malaysia Cities Longitude",
        data: malaysiaCitiesLongitude,
        instructions: compareQuizData["malaysia-longitude"].instructions,
        decimalPlaces: 4,
      }
    }
  ]
}

export const prerender = true;
const { data, title, instructions, decimalPlaces, startNumber } = Astro.props;
const images = import.meta.glob<{ default: ImageMetadata }>('/src/img/**/*.jpg');
const seoImg = await images[`/src/img/quizzes/compare/${Astro.params.quiz}.jpg`]().then(img => img.default.src);
---
<SEO
  title={`${Astro.props.title} | Izz Hafeez`}
  description={Astro.props.instructions}
  canonical={`https://izzhafeez.com/quizzes/compare/${Astro.params.quiz}`}
  openGraph={{
    basic: {
      title: `${Astro.props.title} | Izz Hafeez`,
      type: "website",
      image: seoImg,
      url: `https://izzhafeez.com/quizzes/compare/${Astro.params.quiz}`
    }
  }}
  extend={{
    // extending the default link tags
    link: [{ rel: "icon", href: "/favicon.png" }],
    // extending the default meta tags
    meta: [
      {
        name: "twitter:image",
        content: seoImg,
      },
      { name: "twitter:title", content: `${Astro.props.title} | Izz Hafeez`},
      { name: "twitter:description", content: Astro.props.instructions },
    ],
  }}
/>

<Layout>
  <div slot="main">
    <div class="fixed z-50 w-screen">
      <NavBar/>
    </div>
    <CompareQuiz client:load data={data} title={title} instructions={instructions} key={Astro.params.quiz} decimalPlaces={decimalPlaces} startNumber={startNumber || 0}/>
  </div>
</Layout>
<link href="https://cdn.jsdelivr.net/npm/@sweetalert2/theme-wordpress-admin/wordpress-admin.css" rel="stylesheet">
<script is:inline src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.js"></script>